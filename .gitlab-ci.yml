stages:
  - test
  - coverage
  - deploy

image: python:3.13-alpine

# Étape de test
test:
  stage: test
  script:
    - echo "Hello, $GITLAB_USER_LOGIN!"
    - echo "Running Test"
    - apk add gcc python3-dev musl-dev linux-headers git
    - pip install hatch
    - hatch shell
    - hatch test

# Étape de couverture
coverage:
  stage: coverage
  script:
    - echo "Collecting Code Coverage"
    - pip install pytest-cov
    - pytest --cov=src.my_arithmetic_oscarb.function --cov-report=xml --cov-report=term-missing
  artifacts:
    expire_in: 1 hour
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
  coverage: '/TOTAL.*? (\d+%)$/'

# Étape de déploiement (tag)
deploy-tag:
  stage: deploy
  script:
    - apk add git
    - pip install hatch hatch-vcs
    - hatch build
    - echo "my-arithmetic-oscarb deployment on stable servers"
    - echo "Contenu du dossier dist :"
    - ls dist/
  only:
    - tags
  artifacts:
    paths:
      - dist/*.whl

# Étape de déploiement (develop)
deploy-develop:
  stage: deploy
  script:
    - if [ "$CI_COMMIT_REF_NAME" = "develop" ]; then
        apk add git
        pip install hatch hatch-vcs
        hatch build
        echo "my-arithmetic-oscarb deployment on develop servers"
        echo "Contenu du dossier dist :"
        ls dist/
      fi
  artifacts:
    paths:
      - dist/*.whl